import os
import sys
from pathlib import Path
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –∏–∑ –ø–æ–¥–ø–∞–ø–æ–∫
sys.path.append(str(Path(__file__).parent / "my_ui_agent"))

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ my_ui_agent/.env
env_path = Path(__file__).parent / "my_ui_agent" / ".env"
load_dotenv(env_path)

def test_environment():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    print(f"üìÑ .env —Ñ–∞–π–ª: {env_path}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Cloud
    gcp_creds = os.getenv('GOOGLE_APPLICATION_CREDENTIALS', '')
    if gcp_creds and os.path.exists(gcp_creds):
        print("‚úÖ Google Cloud credentials –Ω–∞–π–¥–µ–Ω—ã")
    else:
        print(f"‚ùå Google Cloud credentials –Ω–µ –Ω–∞–π–¥–µ–Ω—ã: {gcp_creds}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Phi Vision
    if os.getenv('PHI_VISION_ENABLED', '').lower() == 'true':
        print("‚úÖ Phi Vision –≤–∫–ª—é—á–µ–Ω")
        try:
            import transformers
            print(f"‚úÖ Transformers –≤–µ—Ä—Å–∏—è: {transformers.__version__}")
        except ImportError:
            print("‚ùå Transformers –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    try:
        import torch
        device = torch.cuda.is_available()
        print(f"üñ•Ô∏è  CUDA –¥–æ—Å—Ç—É–ø–Ω–∞: {device}")
        print(f"üñ•Ô∏è  –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {'cuda' if device else 'cpu'}")
    except ImportError:
        print("‚ùå PyTorch –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    test_environment()
